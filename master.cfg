#!/usr/bin/env python
# buildbot-ros configuration file

# import relevant parts
from buildbot_ros_cfg.ros_deb import ros_debbuild
from buildbot_ros_cfg.ros_test import ros_testbuild
from buildbot_ros_cfg.ros_doc import ros_docbuild
from buildbot_ros_cfg.launchpad_deb import launchpad_debbuild
from buildbot_ros_cfg.distro import *

from buildbot.schedulers import forcesched, timed
from buildbot.scheduler import Periodic

from buildbot.plugins import util
from buildbot.status.web import auth
from buildbot.status import html

from buildbot.buildslave import BuildSlave

from rosdistro import get_index

# BuildMasterConfig
c = BuildmasterConfig = {}
c['title'] = 'Buildbot-ROS'
c['titleURL'] = 'http://github.com/mikeferguson/buildbot-ros'
c['buildbotURL'] = "http://localhost:8010/"
c['builders'] = []
c['change_source'] = []
c['schedulers'] = []

c['db'] = {
    # This specifies what database buildbot uses to store its state. You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}

# Web front end
authz_cfg=util.Authz(
    # change any of these to True to enable; see the manual for more options
    auth=util.BasicAuth([("ros","ros")]),
    gracefulShutdown = False,
    forceBuild = 'auth',
    forceAllBuilds = False,
    pingBuilder = False,
    stopBuild = False,
    stopAllBuilds = False,
    cancelPendingBuild = False,
)
c['status'] = []
c['status'].append(html.WebStatus(http_port=8010, authz=authz_cfg))

# Build Machines
c['slaves'] = [BuildSlave('rosbuilder1', 'mebuildslotsaros'),
               BuildSlave('rosbuilder2', 'mebuildslotsaros')]
c['slavePortnum'] = 9989
BUILDERS = ['rosbuilder1', 'rosbuilder2']

# Pull request builder tokens (should not be stored in rosdistro)
# This is a mapping of "repo" -> "token"
# If a repo has no entry, then pull request builder will not be started
oauth_tokens = dict()

# RosDistro Stuff
rosindex = get_index('https://raw.githubusercontent.com/JafarAbdi/rosdistro_test/master/index.yaml')
dist_names = rosindex.distributions.keys()

oracle = RosDistroOracle(rosindex, dist_names)

# Setup jobs
DEB_JOBS = list()
for dist in dist_names:
    print('')
    print('Configuring for %s' % dist)

    # debian builder
    DEB_JOBS += branch_debbuilders_from_rosdistro(c, oracle, dist, BUILDERS)

nightly = Periodic(name="daily",
                   builderNames= DEB_JOBS,
                   periodicBuildTimer=86400)
c['schedulers'] = [nightly]

c['schedulers'].append(
    forcesched.ForceScheduler(
        name='force',
        builderNames=DEB_JOBS
    )
)
